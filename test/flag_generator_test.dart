// test/flag_generator_test.dart

import 'package:all_country_code/src/utils/flag_generator.dart';
import 'package:flutter_test/flutter_test.dart';

void main() {
  group('FlagGenerator', () {
    test('generateFlag generates correct emoji flags for valid ISO codes', () {
      expect(FlagGenerator.generateFlag('US'), 'ğŸ‡ºğŸ‡¸');
      expect(FlagGenerator.generateFlag('GB'), 'ğŸ‡¬ğŸ‡§');
      expect(FlagGenerator.generateFlag('CA'), 'ğŸ‡¨ğŸ‡¦');
      expect(FlagGenerator.generateFlag('FR'), 'ğŸ‡«ğŸ‡·');
      expect(FlagGenerator.generateFlag('DE'), 'ğŸ‡©ğŸ‡ª');
    });

    test('generateFlagForWeb generates correct emoji flags for valid ISO codes',
        () {
      expect(FlagGenerator.generateFlagForWeb('US'), 'ğŸ‡ºğŸ‡¸');
      expect(FlagGenerator.generateFlagForWeb('GB'), 'ğŸ‡¬ğŸ‡§');
      expect(FlagGenerator.generateFlagForWeb('CA'), 'ğŸ‡¨ğŸ‡¦');
      expect(FlagGenerator.generateFlagForWeb('FR'), 'ğŸ‡«ğŸ‡·');
      expect(FlagGenerator.generateFlagForWeb('DE'), 'ğŸ‡©ğŸ‡ª');
    });

    test('generateFlag returns empty string for empty ISO code', () {
      expect(FlagGenerator.generateFlag(''), '');
    });

    test('generateFlagForWeb returns empty string for empty ISO code', () {
      expect(FlagGenerator.generateFlagForWeb(''), '');
    });

    test('generateFlag handles lowercase ISO codes', () {
      expect(FlagGenerator.generateFlag('us'), 'ğŸ‡ºğŸ‡¸');
      expect(FlagGenerator.generateFlag('gb'), 'ğŸ‡¬ğŸ‡§');
      expect(FlagGenerator.generateFlag('ca'), 'ğŸ‡¨ğŸ‡¦');
    });

    test('generateFlagForWeb handles lowercase ISO codes', () {
      expect(FlagGenerator.generateFlagForWeb('us'), 'ğŸ‡ºğŸ‡¸');
      expect(FlagGenerator.generateFlagForWeb('gb'), 'ğŸ‡¬ğŸ‡§');
      expect(FlagGenerator.generateFlagForWeb('ca'), 'ğŸ‡¨ğŸ‡¦');
    });

    test('generateFlag handles invalid characters', () {
      expect(FlagGenerator.generateFlag('1A'), '1ğŸ‡¦');
      expect(FlagGenerator.generateFlag('A1'), 'ğŸ‡¦1');
      expect(FlagGenerator.generateFlag('A!'), 'ğŸ‡¦!');
      expect(FlagGenerator.generateFlag('12'), '12');
      expect(FlagGenerator.generateFlag('!@'), '!@');
      expect(FlagGenerator.generateFlag('US1'), 'ğŸ‡ºğŸ‡¸1');
      expect(FlagGenerator.generateFlag('1US'), '1ğŸ‡ºğŸ‡¸');
    });

    test('generateFlagForWeb handles invalid characters', () {
      expect(FlagGenerator.generateFlagForWeb('1A'), '1ğŸ‡¦');
      expect(FlagGenerator.generateFlagForWeb('A1'), 'ğŸ‡¦1');
      expect(FlagGenerator.generateFlagForWeb('A!'), 'ğŸ‡¦!');
      expect(FlagGenerator.generateFlagForWeb('12'), '12');
      expect(FlagGenerator.generateFlagForWeb('!@'), '!@');
      expect(FlagGenerator.generateFlagForWeb('US1'), 'ğŸ‡ºğŸ‡¸1');
      expect(FlagGenerator.generateFlagForWeb('1US'), '1ğŸ‡ºğŸ‡¸');
    });
  });
}
